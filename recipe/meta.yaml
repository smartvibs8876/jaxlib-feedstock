{% set version = "0.4.23" %}
{% set number = 0 %}

{% if cuda_compiler_version != "None" %}
{% set number = number + 200 %}
{% endif %}


package:
  name: jaxlib
  version: {{ version }}

source:
  # only pull sources after upstream PyPI release...
  url: https://github.com/google/jax/archive/jaxlib-v{{ version }}.tar.gz
  sha256: e4c06d62ba54becffd91abc862627b8b11b79c5a77366af8843b819665b6d568
  patches:
    - patches/0001-custom-build.diff
    - patches/0002-bazelrc-edit.diff  # [cudatoolkit == '11.8' or cudatoolkit == '12.2']
    - patches/0003-Patched-openxla-for-tf_runtime.patch     #[s390x]
    - patches/0004-Remove-bazel-shutdown-call-from-jax-code.patch      #[x86_64]
    - patches/0005-Use-ppc64le-compatible-boringssl.patch            #[ppc64le]

build:
  number: 6
  string: {{ build_type }}_py{{ python | replace(".", "") }}_pb{{ protobuf | replace(".*", "")}}_{{ PKG_BUILDNUM }}   #[build_type == 'cpu']
  string: {{ build_type }}{{ cudatoolkit | replace(".*", "") }}_py{{ python | replace(".", "") }}_pb{{ protobuf | replace(".*", "")}}_{{ PKG_BUILDNUM }} #[build_type == 'cuda']
  script_env:          #[build_type == "cuda" or ppc_arch == "p10"]
    - CUDA_HOME        #[build_type == "cuda"]
    - GCC_HOME      #[ppc_arch == "p10"]


requirements:
  build:
    - {{ compiler('c') }}                    # [ ppc_arch != "p10"]
    - {{ compiler('cxx') }}                  # [ ppc_arch != "p10"]
    - {{ compiler('cuda') }}                 # [build_type == 'cuda']
    - python {{ python }}                                 # [build_platform != target_platform]
    - cross-python_{{ target_platform }}     # [build_platform != target_platform]
    - numpy {{ numpy }}                                 # [build_platform != target_platform]
    - unzip
    # Keep bazel listed twice here to help the migrators track dependencies
    - bazel {{ bazel }}
    - bazel-toolchain
    # need protoc
    - libprotobuf {{ libprotobuf }}
    # needs protoc-gen-grpc
    - grpc-cpp {{ grpc_cpp }}
    # needs flatc
    - flatbuffers {{ flatbuffers }}
    # list libabseil here to ensure pinning correctly
    - libabseil {{ abseil_cpp }}
    - build
    - cudatoolkit {{ cudatoolkit }}            #[build_type == 'cuda']
  host:
    - cudnn {{ cudnn }}      # [build_type == 'cuda']
    - nccl {{ nccl }}        # [build_type == 'cuda']
    - python {{ python }}
    - pip
    - numpy {{ numpy }}
    - libopenblas {{ openblas }}
    - wheel
    # list libabseil here to ensure pinning correctly
    - libabseil {{ abseil_cpp }}
    - flatbuffers {{ flatbuffers }}
    - grpc-cpp {{ grpc_cpp }}
    - openssl
    - zlib {{ zlib }}
    - build
    - cudatoolkit {{ cudatoolkit }}            #[build_type == 'cuda']
  run:
    - python
    - {{ pin_compatible('numpy') }}
    - scipy {{ scipy }}
    - re2
    - c-ares
    - libopenblas {{ openblas }}
    - nccl {{ nccl }}           #[build_type == 'cuda']
    - ml_dtypes >=0.0.3
    - cudatoolkit {{ cudatoolkit }}            #[build_type == 'cuda']
  run_constrained:
    - jax >={{ version }}

test:
  files:
    - test_jaxlib.py
  requires:
    - pip
  commands:
    - pip check
    - python test_jaxlib.py
  imports:
    - jaxlib
    # Only this import actually triggers the load of XLA
    - jaxlib.xla_client

about:
  home: http://github.com/google/jax
  license: Apache-2.0
  license_file: LICENSE
  summary: 'Composable transformations of Python+NumPy programs: differentiate, vectorize, JIT to GPU/TPU, and more'
  dev_url: http://github.com/google/jax

extra:
  recipe-maintainers:
    - open-ce/open-ce-dev-team
